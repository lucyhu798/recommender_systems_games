For task1 of would play. I tried using a k-nn kind of concept using the Jaccard's similarites to get the cloests users and the closest items to the one we are looking at. Usually if the game is popular given the threshold, then it would be predicted as played. Iif it is not popular, we look at if the game is similar other games and if the user has played those games before and then we look at the users and see if the most similar users have played the game if they are both, then we predict as played. I also set up the prediction so that it should only output these prediction depending on if the prediction for 1 fits to 50% if it doesnt then the rest in the lsit that is popular but not predicted as in the 50% that was popular or in the user-item similarity rating, then thoes prediction should be 0  at 50%. this is to make sure that our testset shows predictions that are even.  

For task2 of hours played. I actually tried multiple things such as SVD and othe latent factor models but those were not sucessful. The most successful ones were when I changed to average the beta I and betaU when intializing to see if anything has changed. I also looked into adding in gamma u and gammi to see if there are any changes and there wasn't. So the best score I have gotten was from using hw3's solution and tuning the parameters and the lambda so that it is better. Once I finetuned everything, I ended up running the model on all the data using the fine tuned parameters and cycle number to prevent overrfitting so that the MSE woould be lower. 